{
  "name": "ag-grid-docs",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "{projectRoot}/src",
  "targets": {
    "build": {
      "outputs": ["{projectRoot}/dist"],
      "dependsOn": [
        "build:copy-styles",
        "generate-doc-references",
        "generate-examples",
        "ag-grid-react:build",
        "^build"
      ],
      "inputs": [
        "^production",
        "production",
        "!{projectRoot}/vitest.config.mjs",
        "{workspaceRoot}/external/ag-website-shared/**",
        "charts",
        { "env": "PUBLIC_PACKAGE_VERSION" }
      ],
      "cache": true,
      "command": "astro build",
      "options": {
        "cwd": "{projectRoot}",
        "silent": true
      },
      "configurations": {
        "staging": {},
        "archive": {},
        "production": {},
        "verbose": {
          "silent": null
        }
      }
    },
    "build:copy-styles": {
      "executor": "nx:run-commands",
      "inputs": [],
      "outputs": [],
      "dependsOn": ["@ag-grid-community/styles:build"],
      "options": {
        "cwd": "documentation/ag-grid-docs",
        "commands": [
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridAlpine/*.*svg --delete public/theme-icons/alpine",
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridBalham/*.*svg --delete public/theme-icons/balham",
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridClassic/*.*svg --delete public/theme-icons/base",
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridMaterial/*.*svg --delete public/theme-icons/material",
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridAlpine/*.*svg --delete public/theme-icons/alpine",
          "rsync -r ../../community-modules/styles/icon-fonts/fonts/agGridQuartz/*.*svg --delete public/theme-icons/quartz"
        ]
      }
    },
    "build-tsc": {
      "executor": "nx:run-commands",
      "options": {
        "command": "tsc --project {projectRoot}/tsconfig.json"
      }
    },
    "elapsedBuildTime": {
      "dependsOn": ["^build", "^docs-resolved-interfaces"],
      "command": "node scripts/buildTime.mjs stop && node scripts/buildTime.mjs elapsed"
    },
    "dev": {
      "dependsOn": [
        "^build",
        "^docs-resolved-interfaces",
        "elapsedBuildTime",
        "ag-grid-react:build",
        "ag-grid-angular:build",
        "ag-grid-vue3:build",
        "build:copy-styles"
      ],
      "command": "astro dev --port=${PORT} --host",
      "options": {
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "watch": {}
      }
    },
    "preview": {
      "dependsOn": [
        {
          "target": "build"
        }
      ],
      "command": "astro preview --port=${PORT}",
      "options": {
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "staging": {},
        "archive": {},
        "production": {}
      }
    },
    "lint": {
      "command": "eslint",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "nx:noop",
      "dependsOn": ["test:vitest"],
      "inputs": [],
      "outputs": [],
      "options": {
        "cwd": "{projectRoot}"
      },
      "configurations": {
        "ci": {},
        "watch": {},
        "update": {}
      }
    },
    "test:vitest": {
      "command": "npx vitest",
      "outputs": ["{workspaceRoot}/reports/ag-grid-website.xml"],
      "dependsOn": [],
      "options": {
        "cwd": "{projectRoot}",
        "config": "vitest.config.mjs",
        "watch": false
      },
      "configurations": {
        "ci": {
          "outputFile": "../../reports/ag-grid-website.xml",
          "reporters": ["junit"]
        },
        "watch": {
          "watch": true
        },
        "update": {
          "update": true
        }
      }
    },
    "generate-examples": {
      "executor": "nx:noop",
      "dependsOn": ["^generate-example"],
      "inputs": [{ "externalDependencies": ["npm:typescript"] }],
      "outputs": [],
      "cache": true,
      "batch": true,
      "configurations": {
        "staging": {},
        "archive": {},
        "production": {}
      }
    },
    "generate-doc-references": {
      "executor": "ag-grid-generate-code-reference-files:generate",
      "dependsOn": ["ag-grid-generate-code-reference-files:build"],
      "inputs": [
        "{workspaceRoot}/packages/ag-grid-community/src/**/*.ts",
        "{workspaceRoot}/packages/ag-grid-angular/projects/ag-grid-angular/src/lib/**/*.ts",
        "{workspaceRoot}/packages/ag-grid-react/src/shared/**/*.ts",
        "{workspaceRoot}/packages/ag-grid-enterprise/src/**/*.ts",
        { "dependentTasksOutputFiles": "**/*", "transitive": false },
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "outputs": ["{options.output}"],
      "cache": true,
      "options": {
        "output": "dist/documentation/reference"
      }
    },
    "validate-examples": {
      "executor": "nx:run-commands",
      "dependsOn": ["^build:types"],
      "inputs": [
        "{projectRoot}/tsconfig.examples.json",
        "{workspaceRoot}/{projectRoot}/src/**/_examples/**/*.ts",
        "tsDeclarations",
        {
          "externalDependencies": ["npm:typescript"]
        }
      ],
      "cache": true,
      "options": {
        "commands": ["npx tsc -p {projectRoot}/tsconfig.examples.json"]
      }
    },
    "update-algolia": {
      "command": "npm run updateLocal",
      "options": {
        "cwd": "{workspaceRoot}/documentation/update-algolia-indices"
      },
      "configurations": {
        "staging": {
          "command": "npm run updateDev"
        },
        "archive": {
          "command": "npm run updateDev"
        },
        "production": {
          "command": "npm run updateProd"
        }
      }
    },
    "update-versions-data": {
      "executor": "nx:run-commands",
      "cache": false,
      "options": {
        "command": "tsx {projectRoot}/scripts/versions-data/updateVersionsData.ts"
      },
      "configurations": {
        "verbose": {
          "args": ["--verbose"]
        }
      }
    }
  },
  "implicitDependencies": ["ag-grid-community", "ag-grid-enterprise"],
  "tags": ["website"]
}
