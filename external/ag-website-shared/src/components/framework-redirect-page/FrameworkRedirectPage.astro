---
import type { Framework } from '@ag-grid-types';

interface Props {
    framework?: Framework;
    redirectPageName: string;
}

const frameworkOverride = Astro.props.framework;
const redirectUrl = `./${Astro.props.redirectPageName}`;
---

<div class="layout-grid">
    <div class="redirectContent hidden">
        <slot />
    </div>
</div>

<style lang="scss">
    @use 'design-system' as *;

    .redirectContent {
        width: 100%;
        text-align: center;
        margin-top: $spacing-size-6;

        &.hidden {
            display: none;
        }
    }
</style>
<script>
    const WAIT_TO_SHOW_REDIRECT_CONTENT = 1000;

    setTimeout(() => {
        document.querySelector('.redirectContent')?.classList.remove('hidden');
    }, WAIT_TO_SHOW_REDIRECT_CONTENT);
</script>

<!-- 
    Redirect page to framework page based on stored internal framework

    NOTE: Need to put var into data attribute as Astro can't pass directly into build time JavaScript
-->
<div id="redirectUrl" data-framework-override={frameworkOverride} data-redirect-url={redirectUrl}></div>
<script>
    import { $internalFramework } from '@stores/frameworkStore';
    import { getFrameworkFromInternalFramework } from '@utils/framework';
    import { urlWithPrefix } from '@utils/urlWithPrefix';

    const data = document.getElementById('redirectUrl')?.dataset;
    const dataAttrFrameworkOverride = data.frameworkOverride;
    const dataAttrUrl = data.redirectUrl;
    const framework = dataAttrFrameworkOverride ?? getFrameworkFromInternalFramework($internalFramework.get());
    const redirectUrl = urlWithPrefix({ framework, url: dataAttrUrl });

    const searchParams = window.location.search;
    const debugSearchParam = new URLSearchParams(searchParams).get('debug');
    if (debugSearchParam === 'true') {
        console.log(`Debug: Redirect to '${redirectUrl}'`);
    } else {
        window.location.replace(redirectUrl);
    }
</script>
